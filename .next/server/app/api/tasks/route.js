"use strict";(()=>{var e={};e.id=495,e.ids=[495],e.modules={20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},20075:(e,t,s)=>{s.r(t),s.d(t,{originalPathname:()=>k,patchFetch:()=>h,requestAsyncStorage:()=>g,routeModule:()=>d,serverHooks:()=>x,staticGenerationAsyncStorage:()=>m});var r={};s.r(r),s.d(r,{GET:()=>p,POST:()=>c});var a=s(87916),o=s(49930),n=s(2169),i=s(4389);let u=[{id:"1",title:"Implement Task API",status:"in-progress"},{id:"2",title:"Design UI Mockups",status:"todo"}],l=3;async function p(e){try{return console.log("GET /api/tasks called"),i.NextResponse.json(u)}catch(e){return console.error("Error fetching tasks:",e),i.NextResponse.json({message:"Internal Server Error"},{status:500})}}async function c(e){try{let t=await e.json();if(console.log("POST /api/tasks called with body:",t),!t.title||"string"!=typeof t.title)return i.NextResponse.json({message:"Bad Request: Title is required and must be a string"},{status:400});let s={id:String(l++),title:t.title,status:t.status||"todo"};return u.push(s),console.log("New task created:",s),i.NextResponse.json(s,{status:201})}catch(e){if(console.error("Error creating task:",e),e instanceof SyntaxError)return i.NextResponse.json({message:"Bad Request: Invalid JSON format"},{status:400});return i.NextResponse.json({message:"Internal Server Error"},{status:500})}}let d=new a.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/tasks/route",pathname:"/api/tasks",filename:"route",bundlePath:"app/api/tasks/route"},resolvedPagePath:"C:\\Bollo\\Github\\flowstate-catalyst\\src\\app\\api\\tasks\\route.ts",nextConfigOutput:"",userland:r}),{requestAsyncStorage:g,staticGenerationAsyncStorage:m,serverHooks:x}=d,k="/api/tasks/route";function h(){return(0,n.patchFetch)({serverHooks:x,staticGenerationAsyncStorage:m})}}};var t=require("../../../webpack-runtime.js");t.C(e);var s=e=>t(t.s=e),r=t.X(0,[237,136],()=>s(20075));module.exports=r})();