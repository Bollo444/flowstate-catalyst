"use strict";(()=>{var e={};e.id=366,e.ids=[366],e.modules={20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},35598:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>d,patchFetch:()=>m,requestAsyncStorage:()=>c,routeModule:()=>u,serverHooks:()=>l,staticGenerationAsyncStorage:()=>h});var a={};r.r(a),r.d(a,{GET:()=>i});var o=r(87916),s=r(49930),n=r(2169),p=r(4389);async function i(){let e=process.env.MCP_SERVER_URL||"http://localhost:3001";try{let t=await fetch(`${e}/api/health`);if(!t.ok)throw Error(`HTTP error! status: ${t.status}`);return p.NextResponse.json({status:"ok"})}catch(e){return console.error("MCP health check failed:",e),p.NextResponse.json({error:"MCP server is not responding"},{status:503})}}let u=new o.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/mcp/health/route",pathname:"/api/mcp/health",filename:"route",bundlePath:"app/api/mcp/health/route"},resolvedPagePath:"C:\\Bollo\\Github\\flowstate-catalyst\\src\\app\\api\\mcp\\health\\route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:c,staticGenerationAsyncStorage:h,serverHooks:l}=u,d="/api/mcp/health/route";function m(){return(0,n.patchFetch)({serverHooks:l,staticGenerationAsyncStorage:h})}}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),a=t.X(0,[237,136],()=>r(35598));module.exports=a})();